(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?b(exports):"function"==typeof define&&define.amd?define(["exports"],b):(a=a||self,b(a.ipAddressUtils={}))})(this,function(a){'use strict';var j=Math.pow,k=Number.isInteger;function b(a){return m.test(a)}function c(a){return n.test(a)}function d(a){try{return a.split(/\./g).reduce((a,b,c)=>(a[c]=255&parseInt(b,10),a),new Uint8Array(4))}catch(a){throw new Error(`${r}`)}}function e(a){if(!c(a))throw new Error(`${r}: ${a}`);return a.split(".").reduce((a,b)=>(a<<8)+parseInt(b,10),0)>>>0}function f(a){if(!k(a))throw new TypeError(`${s}: ${a}`);if(0>a||4294967295<a)throw new Error(`${t}`);return`${a>>>24}.${255&a>>16}.${255&a>>8}.${255&a}`}function g(a){var b=Math.min;if(a=parseInt(a),!k(a)||0>=a||32<a)throw new Error(`${u}`);try{const d=[];for(let e=0;4>e;e++){var c=b(a,8);d.push(256-j(2,8-c)),a-=c}return d.join(".")}catch(a){throw new Error(`${u}`)}}function h(a){if(!o.test(a))throw new Error(`${v}`);try{const b=a.match(/(\d+)/g),c=b.reduce((a,b)=>a+((b>>>0).toString(2).match(/1/g)||[]).length,0);return c}catch(a){throw new Error(`${v}`)}}function i(a){if(!b(a))throw new TypeError(`${w}: ${a}`);const c=a.split("/")[1],i=o.test(c)?c:g(c),k=d(a.split("/")[0]),l=d(i),m=k.reduce((a,b,c)=>(a[c]=k[c]&l[c],a),[]),n=e(m.join(".")),p=o.test(c)?h(c):parseInt(c),q=j(2,32-p),r=2>=q?q:q-2,s=2>=q?f(n):f(n+1),t=2>=q?f(n+q-1):f(n+q-2),u=m.join("."),v=f(n+q-1);return{netmask:i,bitmask:p,hostCount:r,firstHost:s,lastHost:t,networkAddress:u,broadcastAddress:v}}const l=/^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9]).){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])([\/ ]{1}((((254|252|248|240|224|192|128|0).0.0.0)|(255.(254|252|248|240|224|192|128|0).0.0)|(255.255.(254|252|248|240|224|192|128|0).0)|(255.255.255.(255|254|252|248|240|224|192|128|0))|(3[0-2]|2[0-9]|1[0-9]|[0-9]))))?$/,m=/^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/((((254|252|248|240|224|192|128|0)\.0\.0\.0)|(255\.(254|252|248|240|224|192|128|0)\.0\.0)|(255\.255\.(254|252|248|240|224|192|128|0)\.0)|(255\.255\.255\.(255|254|252|248|240|224|192|128|0))|(3[0-2]|2[0-9]|1[0-9]|[0-9])))$/,n=/^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9]).){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,o=/^(((255|254|252|248|240|224|192|128|0)\.0\.0\.0)|(255\.(255|254|252|248|240|224|192|128)\.0\.0)|(255\.255\.(255|254|252|248|240|224|192|128)\.0)|(255\.255\.255\.(255|254|252|248|240|224|192|128|0)))$/,p=/^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(-(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])|-((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])|\/(3[0-2]|[1-2][0-9]|[0-9]))?$/,q=/^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(-(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])|\s+-\s+((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])|\/(3[0-2]|[1-2][0-9]|[0-9]))?$/,r="Invalid IPv4 address",s="Invalid IP decimal",t="The IP decimal is out of range",u="Invalid bitmask",v="Invalid netmask",w="Invalid subnet",x={isValid:function(a){return l.test(a)},isSubnet:b,isIpHost:c,isValidIpRange:function(a,b={subnet:null,withSpace:null}){let c=!1;const{withSpace:d}=b;switch(!0){case null===d||!b.hasOwnProperty("withSpace"):c=p.test(a)||q.test(a);break;case!0===d:c=q.test(a);break;default:c=p.test(a);}if(c){const d=a.split("-").map(a=>a.trim()),f=d[0],g=d[1],h=e(f),j=e(g);if(c=h<=j,b&&b.subnet){const a=i(b.subnet),d=e(a.firstHost),f=e(a.lastHost);c=h>=d&&j<=f}}return c},validateIpRange:function(a,b={subnet:null,withSpace:null}){let c=!1;const{withSpace:d}=b;switch(!0){case null===d||!b.hasOwnProperty("withSpace"):c=p.test(a)||q.test(a);break;case!0===d:c=q.test(a);break;default:c=p.test(a);}if(!c)throw new Error(`${"Invalid IP range"}: ${a}`);else{const c=a.split("-").map(a=>a.trim()),d=c[0],f=c[1],g=e(d),h=e(f);if(g>h)throw new Error(`${"End IP should be greater than Start IP"}`);if(b&&b.subnet){const a=i(b.subnet),c=e(a.firstHost),d=e(a.lastHost);if(g<c||h>d)throw new Error(`${"IP address is outside of subnet range"}`)}}return a},toBuffer:d,fromBuffer:function(a){try{return a.join(".")}catch(b){throw new Error(`${"Invalid buffer"}: ${a}`)}},toBitmask:h,fromBitmask:g,toDecimal:e,fromDecimal:f,subnet:i};a.default={ipv4:x},a.ipv4=x,Object.defineProperty(a,"__esModule",{value:!0})});
